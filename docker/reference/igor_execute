#!/usr/bin/env bash
echo "---- Executing igor"
source /usr/local/bin/igor_env.sh


# Only released components are usually installed
echo "Installing igor's python requirements"
if [[ "$IGOR_EXEC" = "pkg" ]]; then
    echo "We can't use igor to update/install igor here."
    echo "( Chicken vs. egg paradox. )"
    echo "... Skipping igor updates duing pkg migrations."
else
    # Make sure local bits are up to date
    export IGOR_BITS="edgcore edggen edgaws edgigor"
    # Accomodate the choice of release or pre-release igor components
    if [[ -z $IGOR_DEVELOP ]]; then
        python3 -m pip install $IGOR_BITS --upgrade --break-system-packages
    else
        python3 -m pip install $IGOR_BITS --upgrade --pre --break-system-packages
    fi
fi
echo "-- Configure container environment"
#igor self configure --twine
# Useful visual confirmations
echo "-- Checking configuration settings"
echo "      PATH = "$PATH
echo "   WORKDIR = "$(pwd)
# Set up the path to the language-specific implementation
export LOCAL_EXEC="/usr/local/bin/igor_"$IGOR_EXEC
echo "LOCAL_EXEC = "$LOCAL_EXEC

# If this is launched from the incorrect subdirectory,
# the script will error out.
pushd $IGOR_EXEC/$IGOR_TARGET
retVal=$?
if [ $retVal -ne 0 ]; then
    echo "Failed to CD into "$IGOR_EXEC/$IGOR_TARGET
    exit $retVal
fi
# Execute the specific script for the target language model
source $LOCAL_EXEC
# Return to the working director
popd
echo "---- Exiting igor"